// RUN: %fox %s -verify -werr

//---ADDITIVE---//
func additive_chck() {
  // Correct
  true+false;
  false+42;
  false-3.14;
  356-true;
  120000+85555;
  5648+32.005;
  3.14-true;
  0.001+333;
  0.999-0.998;
  'a'+'b';
  "abc"+"def";
  'a'+"bc";
  "abc"+'d';

  // Chaining
  1+2-3+4-5+6;
  'a'+'b'+"cd"+'d'+"ef";
  1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1;

  // Incorrect
  // expect-error@+1: cannot use binary operator '-' on expressions of types 'char' and 'char'
  'c'-'c'; 
  // expect-error@+1: cannot use binary operator '-' on expressions of types 'string' and 'string'
  "abc"-"def";
  // expect-error@+1: cannot use binary operator '+' on expressions of types 'bool' and 'char'
  true+'a';
  // expect-error@+1: cannot use binary operator '+' on expressions of types 'string' and 'int'
  "abc"+1;
}

//---MULTIPLICATIVE---//
func multiplicative_chck() {
  // Correct
  20%3;
  40/2.5;
  20*3.14;
  true%true;
  true/50;
  true*false;

  // Chaining
  ((4*2)%3)/2;
  1*2*3*4*5/2;
  ((3%2)/true)*2000;

  // Incorrect
  // expect-error@+1: cannot use binary operator '/' on expressions of types 'char' and 'char'
  'c'/'c'; 
  // expect-error@+1: cannot use binary operator '*' on expressions of types 'string' and 'string'
  "abc"*"def";
  // expect-error@+1: cannot use binary operator '%' on expressions of types 'bool' and 'char'
  true%'a';
  // expect-error@+1: cannot use binary operator '/' on expressions of types 'string' and 'int'
  "abc"/1;
}

//---EXPONENT---//
func exponent_check() {
  // Correct
  4**3;
  20**false;
  3.14**2;

  // Incorrect
  // expect-error@+1: cannot use binary operator '**' on expressions of types 'char' and 'char'
  'c'**'c'; 
  // expect-error@+1: cannot use binary operator '**' on expressions of types 'string' and 'string'
  "abc"**"def";
  // expect-error@+1: cannot use binary operator '**' on expressions of types 'bool' and 'char'
  true**'a';
  // expect-error@+1: cannot use binary operator '**' on expressions of types 'string' and 'int'
  "abc"**1;
}