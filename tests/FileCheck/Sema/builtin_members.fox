// RUN: %fox-verify-dump-ast | %filecheck

func foo() {
  // CHECK: ErrorExpr {{.*}} '<error>'
  'c'.foo; // expect-error: type 'char' has no member named 'foo'

  // string builtins
  let str : string = "hello";
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .size (Builtin 'StringSize') method
  str.size; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .numBytes (Builtin 'StringNumBytes') method
  str.numBytes; // expect-error: reference to a bound member function must be called

  // array builtins
  let arr : [int] = [0, 1];
  let arrB : [[double]] = [];
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .size (Builtin 'ArraySize') method
  arr.size; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .size (Builtin 'ArraySize') method called
  arrB.size(); 
  // CHECK: BuiltinMemberRefExpr {{.*}} '(int) -> void' .append (Builtin 'ArrayAppend') method
  arr.append; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '([double]) -> void' .append (Builtin 'ArrayAppend') method called
  arrB.append([]);
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> void' .pop (Builtin 'ArrayPop') method
  arr.pop; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> void' .pop (Builtin 'ArrayPop') method called
  arrB.pop();
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .front (Builtin 'ArrayFront') method
  arr.front; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> [double]' .front (Builtin 'ArrayFront') method called
  arrB.front();
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> int' .back (Builtin 'ArrayBack') method
  arr.back; // expect-error: reference to a bound member function must be called
  // CHECK: BuiltinMemberRefExpr {{.*}} '() -> [double]' .front (Builtin 'ArrayFront') method called
  arrB.front();
}