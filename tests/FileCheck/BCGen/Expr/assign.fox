// RUN: %fox-dump-bcgen | %filecheck

var g0 : int = 10;
var g1 : int = 20;
var g2 : int = 30;

// CHECK:   Function 0
func valueAssign() {
  // CHECK-NEXT: StoreSmallInt 0 0
  var x : int;
  // CHECK-NEXT: StoreSmallInt 0 0
  x = 0;
  // CHECK-NEXT: StoreSmallInt 0 -50
  x = -50;
  // CHECK-NEXT: StoreSmallInt 0 50
  x = 50;
  // These shouldn't generate anything
  x = x;
  x = x = x;
  // CHECK-NEXT: StoreSmallInt 0 42
  x = 42;

  // chained assignement

  // CHECK-NEXT: StoreSmallInt 1 0
  var a : int;
  // CHECK-NEXT: StoreSmallInt 2 0
  var b : int;
  // CHECK-NEXT: StoreSmallInt 2 0
  // CHECK-NEXT: Copy 1 2
  // CHECK-NEXT: Copy 0 1
  x = a = b = 0;

  // CHECK-NEXT: GetGlobal 2 0
  // CHECK-NEXT: SetGlobal 1 0
  // CHECK-NEXT: SetGlobal 0 0
  g0 = g1 = g2;
}

func arrAssign() {
  let x : [int] = [0, 1, 2];
  // CHECK:       LoadBuiltinFunc 1 arrSet
  // CHECK-NEXT:  Copy 2 0
  // CHECK-NEXT:  StoreSmallInt 3 0
  // CHECK-NEXT:  StoreSmallInt 4 0
  // CHECK-NEXT:  Call 1 1
  x[0] = 0;

  // chained assignement
  // CHECK-NEXT:  LoadBuiltinFunc 1 arrSet
  // CHECK-NEXT:  Copy 2 0
  // CHECK-NEXT:  StoreSmallInt 3 0
  // CHECK-NEXT:  LoadBuiltinFunc 5 arrSet
  // CHECK-NEXT:  Copy 6 0
  // CHECK-NEXT:  StoreSmallInt 7 1
  // CHECK-NEXT:  LoadBuiltinFunc 9 arrSet
  // CHECK-NEXT:  Copy 10 0
  // CHECK-NEXT:  StoreSmallInt 11 2
  // CHECK-NEXT:  StoreSmallInt 12 0
  // CHECK-NEXT:  Call 9 8
  // CHECK-NEXT:  Call 5 4
  // CHECK-NEXT:  Call 1 0
  x[0] = x[1] = x[2] = 0;
}