// RUN: %fox-dump-bcgen | %filecheck

// CHECK: Function 0
// CHECK-NEXT:  PCM: 0-0
func foo(x : int, y : int) {
    // CHECK-NEXT:  StoreSmallInt 0 0
    let x : int = 0;
}

// CHECK: Function 1
// CHECK-NEXT:  PCM: 0-0
func bar(x : int, y : int) {
    // CHECK-NEXT:  StoreSmallInt 0 0
    let x : int = 0;
    // CHECK-NEXT:  StoreSmallInt 2 1
    // CHECK-NEXT:  AddInt 1 1 2
    y+1;
    // CHECK-NEXT:  StoreSmallInt 1 36
    let y : int = 36;
    x;
}

// CHECK: Function 2
// CHECK-NEXT:  PCM: 1-0
func baz(x : mut int, y : int) {
    x; // x is used at least once so its register will be kept alive the 
       // whole time.
    // CHECK-NEXT:  StoreSmallInt 2 16
    let x : int = 16; // even when shadowed
    y;
    // CHECK-NEXT: StoreSmallInt 1 1
    // CHECK-NEXT: StoreSmallInt 2 1
    // CHECK-NEXT: AddInt 1 1 2
    let y : int = 1+1; // however this should overwrite y's register
}

// CHECK: Function 3
// CHECK-NEXT:  PCM: 1
func ass(x : mut int) {
    // CHECK-NEXT: StoreSmallInt 0 42
    x = 42;
    // CHECK-NEXT: StoreSmallInt 1 16
    var x : int = 16;
    // CHECK-NEXT: StoreSmallInt 1 84
    x = 84;
}

// CHECK: Function 4
// CHECK-NEXT:  PCM: 0-0-0
func unusedmut(x: mut int, y: mut double, z: mut double) {
    // None of the parameters are used, so the PCM should be 000
    // and the register should be stolen by x
    // CHECK-NEXT: StoreSmallInt 0 42
    let x : int = 42;
}