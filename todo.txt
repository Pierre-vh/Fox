TODO:
> AST 2.0
	> ASTUnit : Represents a source file, contains declarations. (Done)
	> IdentifierTable & IdentifierInfo (Done)
	> ASTContext (Done)
	> Add the ASTContext to the Context. (Done)
	> ASTContext : Types
	> Move stuf to /Fox/Basic (Done)
	> DeclContext, add it on nodes that need it (funcdecl,if/else/,loops,unit)
		> Lookup system with "restrictedLookup" (only this declcontext) and "fullLookup" (climbs up)
	> DeclRef nodes : add "getDecl()" to get the declaration, returns nullptr if not linked to a decl
		Also make the declRef nodes store a *IdentifierInfo instead of a std::string.

	> At this point if nothing broke down, write unit tests to catch bugs.
		> Test DeclContext chaining : Does it work correctly?
		> Does lookup work as intended 
		> Uniqueness of identifiers
		> Try to break the parser with some edge cases
	> Visitor System rework & Dumper Rewrite

> Sourceloc system
	> SourceManager (a simple class that keeps track of source file contents and assigns an ID to them.)
		> addFromFile() 
		> addFromString() 
			>	both of theses 2 functions will return a lightweight "Response", with a status indicating if the operation was a success and the index
				of the source in the sourcemanager's internal vector
		> getSourceForID() (do not return a copy of the source, but a reference/pointer)
	> SourceLoc object
		> Contains an ID + Col + Line in file
			> Challenge : find a way to keep this small, under 64 bits would be preferable. 
				> Current idea : store the ID + a uint32_t for the index.
			> Would also need a way of telling if a sourceloc is valid, maybe by setting the fileid to 0/-1 ?
				> This would be used to return "null" sourcelocs.
	> SourceRange 
		> Constructed from 2 sourcelocs
		> Contains an ID and 2 cols/line, maybe find optimizations to make that type small. 
			> Currently, my idea is to wrap a sourceloc and store a line/column offset for the range.
		> add utility functions : getBeginningSourceLoc(), getEndingSourceLoc(), etc.
	> Update lexer to add a sourcerange to every single token
	> Update Diagnostics & DiagnosticsEngine to support a sourceloc/sourcerange arg.
> Write all the remaining tests needed.

> Move all my current diagnostics message to the new system and delete the context's system primitive diag system.