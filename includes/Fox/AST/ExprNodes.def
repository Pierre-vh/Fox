//----------------------------------------------------------------------------//
// This file is part of the Fox project.        
// See the LICENSE.txt file at the root of the project for license information.            
// File : ExprNodes.def                      
// Author : Pierre van Houtryve                
//----------------------------------------------------------------------------//
// This file uses Macro to "register" every Expr nodes
// When including this file, the user can define custom macros 
// to gather information about the nodes.
//----------------------------------------------------------------------------//

// Base macro for concrete classes of Expr.
// Concrete classes of Expr
#ifndef EXPR
  #define EXPR(ID,PARENT)
#endif

// Abstract Expressions
// The default behaviour is to ignore them
#ifndef ABSTRACT_EXPR
  #define ABSTRACT_EXPR(ID, PARENT)
#endif

// Expr range
#ifndef EXPR_RANGE 
  #define EXPR_RANGE(ID, FIRST, LAST)
#endif

/* Macros */

// Basic operations
EXPR(BinaryExpr, Expr)
EXPR(UnaryExpr, Expr)
EXPR(CastExpr, Expr)
EXPR(ArraySubscriptExpr, Expr)

// Literals
ABSTRACT_EXPR(AnyLiteralExpr, Expr)
  EXPR(CharLiteralExpr, AnyLiteralExpr)
  EXPR(BoolLiteralExpr, AnyLiteralExpr)
  EXPR(IntegerLiteralExpr, AnyLiteralExpr)
  EXPR(DoubleLiteralExpr, AnyLiteralExpr)
  EXPR(StringLiteralExpr, AnyLiteralExpr)
  EXPR(ArrayLiteralExpr, AnyLiteralExpr)
  EXPR_RANGE(AnyLiteralExpr, CharLiteralExpr, ArrayLiteralExpr)

// Unresolved Exprs
ABSTRACT_EXPR(UnresolvedExpr, Expr)
  EXPR(UnresolvedDeclRefExpr, UnresolvedExpr)
  EXPR_RANGE(UnresolvedExpr, UnresolvedDeclRefExpr, UnresolvedDeclRefExpr)

// DeclRef & Function calls
EXPR(DeclRefExpr,Expr)
EXPR(MemberOfExpr,Expr)
EXPR(CallExpr,Expr)

/* Undef */
#undef EXPR
#undef ABSTRACT_EXPR
#undef EXPR_RANGE