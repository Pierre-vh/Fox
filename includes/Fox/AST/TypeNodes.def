//----------------------------------------------------------------------------//
// This file is part of the Fox project.        
// See the LICENSE.txt file at the root of the project for license information.            
// File : TypeNodes.def                      
// Author : Pierre van Houtryve                
//----------------------------------------------------------------------------//
// This file uses Macro to "register" every Type nodes
// When including this file, the user can define custom macros to gather various informations
// about the nodes.
//----------------------------------------------------------------------------//

// Base macro for concrete classes of Type.
// The Kind of the Type is TypeKind::ID
// The class is ID and it's parent is PARENT
#ifndef TYPE
  #define TYPE(ID,PARENT)
#endif

// Range of Types derived from another Type.
#ifndef TYPE_RANGE
  #define TYPE_RANGE(ID,FIRST,LAST)
#endif

// Abstract Types, most of the time, we don't care about them.
// The class name is ID##Type, and the parent PARENT.
#ifndef ABSTRACT_TYPE
  #define ABSTRACT_TYPE(ID,PARENT)
#endif

/* Macros */

ABSTRACT_TYPE(BasicType, TypeBase)
  TYPE(PrimitiveType, BasicType)
  TYPE(ErrorType, BasicType)
  TYPE_RANGE(BasicType, PrimitiveType, ErrorType)

TYPE(FunctionType, TypeBase)
TYPE(ArrayType, TypeBase)
TYPE(LValueType, TypeBase)
TYPE(CellType, TypeBase)
TYPE(TypeVariableType, TypeBase)

/* Undef */
#undef ABSTRACT_TYPE
#undef TYPE
#undef TYPE_RANGE