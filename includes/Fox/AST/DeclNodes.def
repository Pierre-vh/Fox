//----------------------------------------------------------------------------//
// This file is part of the Fox project.        
// See the LICENSE.txt file at the root of the project for license information.            
// File : DeclNodes.def                      
// Author : Pierre van Houtryve                
//----------------------------------------------------------------------------//
//  x-macros for macro-metaprogramming with Declarations
//----------------------------------------------------------------------------//

// Base macro for concrete classes of Decl.
// The Kind of the expr is DeclKind::ID
// The class is ID and it's parent is PARENT
#ifndef DECL
  #define DECL(ID,PARENT)
#endif

// This macro is used for DeclContexts, the default
// behaviour is to do the same as DECL
#ifndef DECL_CTXT
  #define DECL_CTXT(ID,PARENT) DECL(ID,PARENT)
#endif

// This macro is used for DeclContexts that are also
// ValueDecls, the default behaviour is to do the same as 
// DECL_CTXT, or VALUE_DECL if it's defined.
#ifndef VALUE_DECL_CTXT
  #ifdef VALUE_DECL
    #define VALUE_DECL_CTXT(ID,PARENT) VALUE_DECL(ID,PARENT)  
  #else
    #define VALUE_DECL_CTXT(ID,PARENT) DECL_CTXT(ID,PARENT) 
  #endif
#endif

// This macro is used for ValueDecls, the default
// behaviour is to do the same as DECL
#ifndef VALUE_DECL
  #define VALUE_DECL(ID,PARENT) DECL(ID,PARENT)
#endif

// This macro is used to mark the last DECL_CTXT in the list.
// The default behaviour is to ignore them.
#ifndef LAST_DECL_CTXT
  #define LAST_DECL_CTXT(ID)
#endif

// Range of declarations derived from another decl.
#ifndef DECL_RANGE
  #define DECL_RANGE(ID,FIRST,LAST)
#endif

// The last decl kind
#ifndef LAST_DECL
  #define LAST_DECL(ID)
#endif

// Abstract declarations
// The default behaviour is to ignore them.
#ifndef ABSTRACT_DECL
  #define ABSTRACT_DECL(ID,PARENT)
#endif

/* Macros */
ABSTRACT_DECL(NamedDecl,Decl)
  ABSTRACT_DECL(ValueDecl, NamedDecl)
    VALUE_DECL(ParamDecl, ValueDecl)
    VALUE_DECL(VarDecl, ValueDecl)
    VALUE_DECL_CTXT(FuncDecl, ValueDecl)
    DECL_RANGE(ValueDecl, ParamDecl, FuncDecl)
  DECL_RANGE(NamedDecl, ParamDecl, FuncDecl)

DECL_CTXT(UnitDecl, Decl)
LAST_DECL_CTXT(UnitDecl)

LAST_DECL(UnitDecl)

/* Undef */
#undef ABSTRACT_DECL
#undef DECL
#undef DECL_CTXT
#undef VALUE_DECL_CTXT
#undef VALUE_DECL
#undef DECL_RANGE
#undef LAST_DECL_CTXT
#undef LAST_DECL