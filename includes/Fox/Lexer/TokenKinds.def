//----------------------------------------------------------------------------//
// This file is part of the Fox project.        
// See the LICENSE.txt file at the root of the project for license information.            
// File : Instruction.def                      
// Author : Pierre van Houtryve                
//----------------------------------------------------------------------------//
//  x-macros for macro-metaprogramming with Tokens
//----------------------------------------------------------------------------//

#ifndef TOKEN
  #define TOKEN(ID)
#endif

#ifndef KEYWORD
  #define KEYWORD(ID, TEXT) TOKEN(ID)
#endif

#ifndef PUNCTUATOR
  #define PUNCTUATOR(ID) TOKEN(ID)
#endif

//----------------------------------------------------------------------------//

// Misc. tokens
TOKEN(Invalid)
TOKEN(EndOfFile)

// Identifier
TOKEN(Identifier)

// Constants & Literals
TOKEN(IntConstant)
TOKEN(DoubleConstant)
TOKEN(CharLiteral)
TOKEN(StringLiteral)

// Punctuators : Signs
PUNCTUATOR(Equal)         // =
PUNCTUATOR(Plus)          // +
PUNCTUATOR(Minus)         // -
PUNCTUATOR(Star)          // *
PUNCTUATOR(Slash)         // /
PUNCTUATOR(Percent)       // %
PUNCTUATOR(Less)          // <
PUNCTUATOR(Greater)       // >
PUNCTUATOR(Dot)           // .
PUNCTUATOR(Comma)         // ,
PUNCTUATOR(Semi)          // ;
PUNCTUATOR(Exclaim)       // ;
PUNCTUATOR(Colon)         // :
PUNCTUATOR(LSquare)       // [
PUNCTUATOR(RSquare)       // ]
PUNCTUATOR(LParen)        // (
PUNCTUATOR(RParen)        // )
PUNCTUATOR(LBrace)        // {
PUNCTUATOR(RBrace)        // }
PUNCTUATOR(Dollar)        // $

// Punctuators : Operators
PUNCTUATOR(StarStar)      // **
PUNCTUATOR(EqualEqual)    // ==
PUNCTUATOR(ExclaimEqual)  // !=
PUNCTUATOR(GreaterEqual)  // >=
PUNCTUATOR(LessEqual)     // <=
PUNCTUATOR(PipePipe)      // ||
PUNCTUATOR(AmpAmp)        // &&

// Keywords
KEYWORD(AsKw,     "as")
KEYWORD(BoolKw,   "bool")
KEYWORD(CharKw,   "char")
KEYWORD(DoubleKw, "double")
KEYWORD(ElseKw,   "else")
KEYWORD(FalseKw,  "false")
KEYWORD(FuncKw,   "func")
KEYWORD(IfKw,     "if")
KEYWORD(IntKw,    "int")
KEYWORD(LetKw,    "let")
KEYWORD(MutKw,    "mut")
KEYWORD(ReturnKw, "return")
KEYWORD(StringKw, "string")
KEYWORD(TrueKw,   "true")
KEYWORD(VarKw,    "var")
KEYWORD(WhileKw,  "while")

//----------------------------------------------------------------------------//

#undef TOKEN
#undef KEYWORD
#undef PUNCTUATOR