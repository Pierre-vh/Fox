//----------------------------------------------------------------------------//
// This file is part of the Fox project.        
// See the LICENSE.txt file at the root of the project for license information.            
// File : Builtins.def                      
// Author : Pierre van Houtryve                
//----------------------------------------------------------------------------//
//  x-macros for macro-metaprogramming with builtin functions
//
//  NOTE: If you're adding new built-ins, put them at the end of each category.
//        avoid modifying existing builtins unless you know what you're doing
//        because the bytecode generator uses some builtins, assuming their
//        return type and arguments. (e.g. don't change the return type of the
//        intToString builtin to int unless you want to see some fireworks)
//----------------------------------------------------------------------------//

/// Basic builtin declaration macro
///   FUNC is the name of the function in the fox::builtin namespace
#ifndef BUILTIN
  #define BUILTIN(FUNC)
#endif 

/// The public builtin declaration macro.
/// Public builtins:
///   - are accessible to Fox code, they act and feel like any other function
///   - have their type automatically inferred from their signature
///     (with arguments of type IGNORED_ARG_TYPE ignored)
///   FUNC is the name of the function in the fox::builtin namespace
///   FOX is the name the function should have in Fox code
#ifndef PUBLIC_BUILTIN
  #define PUBLIC_BUILTIN(FUNC, FOX) BUILTIN(FUNC)
#endif 

/// The private builtin declaration macro.
/// Private builtins:
///   - are NOT accessible to Fox code, they act and feel like any other function
///   - their type is NOT inferred from their signature. 
///   - are mostly used in bytecode generation to do special operations not
///     supported by the Fox VM.
///   FUNC is the name of the function in the fox::builtin namespace
///   FOX is the name the function should have in Fox code
#ifndef PRIVATE_BUILTIN
  #define PRIVATE_BUILTIN(FUNC) BUILTIN(FUNC)
#endif 

/// Ranges of builtins
///   NAME is the name of the range
///   FIRST is the first BuiltinID of the range
///   LAST is the last BuiltinID of the range
#ifndef BUILTIN_RANGE
  #define BUILTIN_RANGE(NAME, FIRST, LAST)
#endif

/// This macro is used to tell the routine that converts a Builtin's signature
/// to an AST type that some type should be ignored.
/// This just sets the BuiltinFnArgTypeTrait<TYPE>::ignored value to true.
///     TYPE is the type that should be ignored, e.g. "VM&"
#ifndef IGNORED_ARG_TYPE
  #define IGNORED_ARG_TYPE(TYPE)
#endif 

//----------------------------------------------------------------------------//
// Ignored argument types for public builtins
//----------------------------------------------------------------------------//

IGNORED_ARG_TYPE(VM&) // Ignore references to VM instances

//----------------------------------------------------------------------------//
// Public Builtins
//----------------------------------------------------------------------------//

// TODO: Once I get overloads to work, rename all of these to 'print'
PUBLIC_BUILTIN(printInt,     printInt)
PUBLIC_BUILTIN(printBool,    printBool)
PUBLIC_BUILTIN(printChar,    printChar)
PUBLIC_BUILTIN(printDouble,  printDouble)
PUBLIC_BUILTIN(printString,  printString)

// TODO: Once I get overloads to work, rename all of these to 'toString'
PUBLIC_BUILTIN(charToString,   charToString)
PUBLIC_BUILTIN(intToString,    intToString)
PUBLIC_BUILTIN(doubleToString, doubleToString)
PUBLIC_BUILTIN(boolToString,   boolToString)

BUILTIN_RANGE(Public, printInt, boolToString)

//----------------------------------------------------------------------------//
// Private Builtins
//----------------------------------------------------------------------------//

PRIVATE_BUILTIN(strLength)
PRIVATE_BUILTIN(strNumBytes)
PRIVATE_BUILTIN(getChar)
PRIVATE_BUILTIN(strConcat)
PRIVATE_BUILTIN(charConcat)

//----------------------------------------------------------------------------//

#undef BUILTIN
#undef PUBLIC_BUILTIN
#undef PRIVATE_BUILTIN
#undef BUILTIN_RANGE
#undef IGNORED_ARG_TYPE